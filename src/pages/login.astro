---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Login">
  <div class="min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
      <div>
        <h2 class="mt-6 text-center text-3xl font-extrabold text-gray-900">
          Sign in to your account
        </h2>
      </div>
      
      <form id="login-form" class="mt-8 space-y-6">
        <div class="rounded-md shadow-sm -space-y-px">
          <div>
            <label for="email" class="sr-only">Email address</label>
            <input
              id="email"
              name="email"
              type="email"
              required
              class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-primary-500 focus:border-primary-500 focus:z-10 sm:text-sm"
              placeholder="Email address"
            />
          </div>
          <div>
            <label for="password" class="sr-only">Password</label>
            <input
              id="password"
              name="password"
              type="password"
              required
              class="appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-primary-500 focus:border-primary-500 focus:z-10 sm:text-sm"
              placeholder="Password"
            />
          </div>
        </div>

        <div class="flex items-center justify-end">
          <button
            type="button"
            id="forgot-password"
            class="text-sm font-medium text-primary-600 hover:text-primary-500"
          >
            Forgot your password?
          </button>
        </div>

        <div id="error-message" class="hidden text-red-600 text-sm text-center"></div>
        <div id="success-message" class="hidden text-green-600 text-sm text-center"></div>

        <div>
          <button
            type="submit"
            class="group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500"
          >
            Sign in
          </button>
        </div>
      </form>

      <!-- Forgot Password Modal -->
      <div id="forgot-password-modal" class="hidden fixed inset-0 bg-gray-500 bg-opacity-75 flex items-center justify-center">
        <div class="bg-white rounded-lg p-8 max-w-md w-full">
          <h3 class="text-lg font-medium text-gray-900 mb-4">Reset Password</h3>
          <form id="reset-password-form" class="space-y-4">
            <div>
              <label for="reset-email" class="block text-sm font-medium text-gray-700">Email address</label>
              <input
                type="email"
                id="reset-email"
                name="email"
                required
                class="mt-1 block w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:outline-none focus:ring-primary-500 focus:border-primary-500"
              />
            </div>
            <div class="flex justify-end space-x-3">
              <button
                type="button"
                id="close-modal"
                class="px-4 py-2 text-sm font-medium text-gray-700 hover:text-gray-500"
              >
                Cancel
              </button>
              <button
                type="submit"
                class="px-4 py-2 text-sm font-medium text-white bg-primary-600 rounded-md hover:bg-primary-700"
              >
                Send Reset Link
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  </div>
</Layout>

<script>
  import { authenticateUser, resetPassword } from '../lib/auth';

  const form = document.getElementById('login-form') as HTMLFormElement;
  const errorMessage = document.getElementById('error-message');
  const successMessage = document.getElementById('success-message');
  const forgotPasswordModal = document.getElementById('forgot-password-modal');
  const resetForm = document.getElementById('reset-password-form') as HTMLFormElement;

  function showError(message: string) {
    if (errorMessage) {
      errorMessage.textContent = message;
      errorMessage.classList.remove('hidden');
      successMessage?.classList.add('hidden');
    }
  }

  function showSuccess(message: string) {
    if (successMessage) {
      successMessage.textContent = message;
      successMessage.classList.remove('hidden');
      errorMessage?.classList.add('hidden');
    }
  }

  function hideMessages() {
    errorMessage?.classList.add('hidden');
    successMessage?.classList.add('hidden');
  }

  // Modal controls
  document.getElementById('forgot-password')?.addEventListener('click', () => {
    forgotPasswordModal?.classList.remove('hidden');
  });

  document.getElementById('close-modal')?.addEventListener('click', () => {
    forgotPasswordModal?.classList.add('hidden');
    resetForm?.reset();
  });

  // Close modal when clicking outside
  forgotPasswordModal?.addEventListener('click', (e) => {
    if (e.target === forgotPasswordModal) {
      forgotPasswordModal.classList.add('hidden');
      resetForm?.reset();
    }
  });

  // Handle password reset
  resetForm?.addEventListener('submit', async (e) => {
    e.preventDefault();
    hideMessages();

    const formData = new FormData(resetForm);
    const email = formData.get('email')?.toString();

    if (!email) {
      showError('Please enter your email address');
      return;
    }

    try {
      await resetPassword(email);
      showSuccess('Password reset link sent to your email');
      forgotPasswordModal?.classList.add('hidden');
      resetForm.reset();
    } catch (error) {
      showError('Failed to send reset link. Please try again.');
    }
  });

  // Handle login
  form?.addEventListener('submit', async (e) => {
    e.preventDefault();
    hideMessages();
    
    const formData = new FormData(form);
    const email = formData.get('email')?.toString();
    const password = formData.get('password')?.toString();

    if (!email || !password) {
      showError('Please fill in all fields');
      return;
    }

    try {
      const user = await authenticateUser(email, password);
      
      if (!user) {
        throw new Error('Invalid credentials');
      }

      // Store user session in cookies
      document.cookie = `user=${JSON.stringify(user)}; path=/; max-age=86400`;
      
      // Redirect to admin dashboard
      window.location.href = '/admin';
    } catch (error) {
      console.error('Login error:', error);
      showError('Invalid email or password');
    }
  });
</script>